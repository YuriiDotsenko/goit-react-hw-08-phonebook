{"version":3,"sources":["services/api.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","pages/register.js","pages/login.js","components/Input/Input.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.js","components/Contacts/Contacts.js","components/AddButton/AddButton.js","components/Form/Form.js","components/Section/Section.js","pages/contacts.js","redux/auth/auth-selectors.js","pages/home.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/auth/auth-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["BASE_URL","token","axios","defaults","headers","common","Authorization","getContacts","a","get","data","addContact","contact","post","removeContact","id","delete","registerUser","name","email","password","user","loginUser","logoutUser","answer","getCurrentUser","registerUserRequest","createAction","registerUserSuccess","registerUserError","loginUserSuccess","loginUserRequest","loginUserError","logoutUserSuccess","logoutUserRequest","logoutUserError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","registerUserOperation","userData","dispatch","response","status","loginUserOperation","logoutUserOperation","getCurrentUserOperation","getState","persistedToken","auth","Register","useState","setName","setEmail","setPassword","useDispatch","handleInputChange","event","currentTarget","value","handleFormSubmit","preventDefault","authOperations","onSubmit","Label","type","autoComplete","onChange","Signup","Form","styled","form","label","Input","input","button","Login","LogIn","pattern","title","className","CustomInput","required","defaultProps","setUpFilter","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactsRequest","removeContactsSuccess","removeContactsError","fetchContacts","addContactOperation","removeContactOperation","idToRemove","getItems","state","contacts","items","entities","getFilter","filter","contactsSelectors","getError","error","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactsList","filteredContacts","useSelector","map","number","ContactBox","onClick","contactsOperations","div","Contacts","style","width","actions","AddButton","setNumber","handleInput","find","alert","Section","children","ContactsPage","useEffect","length","getUser","authSelectors","getRefreshing","isRefreshing","getAuthStatus","userAuthorized","getToken","getUserName","HomePage","isLogedIn","Title","Greeting","Description","h1","h2","p","PrivateRoute","routeProps","to","PublicRoute","restricted","shouldRedirect","App","showAuth","setShowAuth","authButtonText","setAuthButtonText","authActive","setAuthActive","userStatus","currentUserName","currentError","text","textAlign","Navlist","NavItem","CustomNavLink","exact","activeClassName","UserMenu","Exit","window","location","href","classNames","current","borderRadius","AuthList","path","ul","li","NavLink","initialUserState","createReducer","_","payload","setError","authReducer","combineReducers","action","isLoading","itemsReducer","filterReducer","contactsReducer","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.73882ff2.chunk.js","sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://connections-api.herokuapp.com/';\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  reset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport async function getContacts() {\n  const { data } = await axios.get(`${BASE_URL}contacts`);\n\n  return data;\n}\nexport async function addContact(contact) {\n  const { data } = await axios.post(`${BASE_URL}contacts`, contact);\n  return data;\n}\nexport async function removeContact(id) {\n  const { data } = await axios.delete(`${BASE_URL}contacts/${id}`);\n  return data;\n}\n\nexport async function registerUser({ name, email, password }) {\n  const user = await axios.post(`${BASE_URL}users/signup`, {\n    name,\n    email,\n    password,\n  });\n  return user;\n}\n\nexport async function loginUser({ email, password }) {\n  const user = await axios.post(`${BASE_URL}users/login`, {\n    email,\n    password,\n  });\n  return user;\n}\n\nexport async function logoutUser() {\n  const answer = await axios.post(`${BASE_URL}users/logout`);\n  return answer;\n}\n\nexport async function getCurrentUser() {\n  const answer = await axios.get(`${BASE_URL}users/current`);\n  return answer;\n}\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerUserRequest = createAction('auth/registerUserRequest');\r\nexport const registerUserSuccess = createAction('auth/registerUserSuccess');\r\nexport const registerUserError = createAction('auth/registerUserError');\r\n\r\nexport const loginUserSuccess = createAction('auth/loginUserSuccess');\r\nexport const loginUserRequest = createAction('auth/loginUserRequest');\r\nexport const loginUserError = createAction('auth/loginUserError');\r\n\r\nexport const logoutUserSuccess = createAction('auth/logoutUserSuccess');\r\nexport const logoutUserRequest = createAction('auth/logoutUserRequest');\r\nexport const logoutUserError = createAction('auth/logoutUserError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n","import {\r\n  getCurrentUser,\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  token,\r\n} from './../../services/api';\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  loginUserError,\r\n  loginUserRequest,\r\n  loginUserSuccess,\r\n  logoutUserError,\r\n  logoutUserRequest,\r\n  logoutUserSuccess,\r\n  registerUserError,\r\n  registerUserRequest,\r\n  registerUserSuccess,\r\n} from './auth-actions';\r\n\r\nexport const registerUserOperation = userData => async dispatch => {\r\n  dispatch(registerUserRequest());\r\n\r\n  try {\r\n    const answer = await registerUser(userData);\r\n    dispatch(registerUserSuccess(answer.data));\r\n    token.set(answer.data.token);\r\n  } catch (error) {\r\n    dispatch(registerUserError(error.response.status));\r\n  }\r\n};\r\n\r\nexport const loginUserOperation = userData => async dispatch => {\r\n  dispatch(loginUserRequest());\r\n\r\n  try {\r\n    const answer = await loginUser(userData);\r\n\r\n    dispatch(loginUserSuccess(answer.data));\r\n    token.set(answer.data.token);\r\n  } catch (error) {\r\n    dispatch(loginUserError(error.response.status));\r\n  }\r\n};\r\n\r\nexport const logoutUserOperation = () => async dispatch => {\r\n  dispatch(logoutUserRequest());\r\n\r\n  try {\r\n    await logoutUser();\r\n\r\n    dispatch(logoutUserSuccess());\r\n    token.reset();\r\n  } catch (error) {\r\n    dispatch(logoutUserError(error.response.status));\r\n  }\r\n};\r\n\r\nexport const getCurrentUserOperation = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await getCurrentUser();\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.response.status));\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from './../redux/auth';\r\nimport styled from 'styled-components';\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = event => {\r\n    switch (event.currentTarget.name) {\r\n      case 'name':\r\n        setName(event.currentTarget.value);\r\n        return;\r\n      case 'email':\r\n        setEmail(event.currentTarget.value);\r\n        return;\r\n      case 'password':\r\n        setPassword(event.currentTarget.value);\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    dispatch(authOperations.registerUserOperation({ name, email, password }));\r\n\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleFormSubmit}>\r\n      <Label>\r\n        Name:\r\n        <Input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Email:\r\n        <Input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Password:\r\n        <Input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"off\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n      </Label>\r\n      <Signup type=\"submit\">Sign up</Signup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 40%;\r\n  margin: 0 auto;\r\n  border: 2px solid black;\r\n  padding: 15px;\r\n`;\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n  font-weight: bold;\r\n  color: #94255d;\r\n`;\r\nconst Input = styled.input`\r\n  width: 70%;\r\n  margin-left: 20px;\r\n  padding: 5px;\r\n  color: #94255d;\r\n  border: 2px solid #94255d;\r\n  border-radius: 5px;\r\n`;\r\nconst Signup = styled.button`\r\n  padding: 5px 15px;\r\n  width: 130px;\r\n  margin-top: 10px;\r\n  background-color: rgb(126, 50, 150);\r\n  color: aliceblue;\r\n  border: none;\r\n  border-radius: 5px;\r\n  transition: background-color 250ms ease, transform 250ms ease;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: rgb(162, 63, 192);\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from './../redux/auth';\r\nimport styled from 'styled-components';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = event => {\r\n    switch (event.currentTarget.name) {\r\n      case 'email':\r\n        setEmail(event.currentTarget.value);\r\n        return;\r\n      case 'password':\r\n        setPassword(event.currentTarget.value);\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    dispatch(authOperations.loginUserOperation({ email, password }));\r\n\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleFormSubmit}>\r\n      <Label>\r\n        Email\r\n        <Input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Password\r\n        <Input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"off\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n      </Label>\r\n      <LogIn type=\"submit\">Log in</LogIn>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 40%;\r\n  margin: 0 auto;\r\n  border: 2px solid black;\r\n  padding: 15px;\r\n`;\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n  font-weight: bold;\r\n  color: #94255d;\r\n`;\r\nconst Input = styled.input`\r\n  width: 70%;\r\n  margin-left: 20px;\r\n  padding: 5px;\r\n  color: #94255d;\r\n  border: 2px solid #94255d;\r\n  border-radius: 5px;\r\n`;\r\nconst LogIn = styled.button`\r\n  padding: 5px 15px;\r\n  width: 130px;\r\n  margin-top: 10px;\r\n  background-color: rgb(126, 50, 150);\r\n  color: aliceblue;\r\n  border: none;\r\n  border-radius: 5px;\r\n  transition: background-color 250ms ease, transform 250ms ease;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: rgb(162, 63, 192);\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Input.css';\nimport styled from 'styled-components';\n\nconst Input = ({\n  type,\n  name,\n  pattern,\n  title,\n  value,\n  handleInputChange,\n  label,\n}) => (\n  <Label className=\"Label\">\n    {label}:\n    <CustomInput\n      // style={{ ...style }}\n      className=\"Input\"\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n      value={value}\n      onChange={handleInputChange}\n      autoComplete=\"off\"\n    />\n  </Label>\n);\n\nInput.defaultProps = {\n  type: 'text',\n  label: '',\n};\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nexport default Input;\n\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  width: 100%;\n  font-weight: bold;\n  color: #94255d;\n`;\nconst CustomInput = styled.input`\n  width: 60%;\n  margin-left: 20px;\n  padding: 5px;\n  color: #94255d;\n  border: 2px solid #94255d;\n  border-radius: 5px;\n`;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst setUpFilter = { setUpFilter: createAction('phonebook/filter') };\nexport default setUpFilter;\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const removeContactsRequest = createAction(\n  'contacts/removeContactRequest',\n);\nexport const removeContactsSuccess = createAction(\n  'contacts/removeContactSuccess',\n);\nexport const removeContactsError = createAction('contacts/removeContactError');\n","import { getContacts, addContact, removeContact } from '../../services/api';\nimport {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  fetchContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  removeContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n} from './contacts-actions';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const data = await getContacts();\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.response.status));\n  }\n};\n\nexport const addContactOperation = data => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const user = await addContact(data);\n    dispatch(addContactSuccess(user));\n  } catch (error) {\n    dispatch(addContactError(error.response.status));\n  }\n};\n\nexport const removeContactOperation = idToRemove => async dispatch => {\n  dispatch(removeContactsRequest());\n\n  try {\n    await removeContact(idToRemove);\n    dispatch(removeContactsSuccess(idToRemove));\n  } catch (error) {\n    dispatch(removeContactsError(error.response.status));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getItems = state => state.contacts.items.entities;\nconst getFilter = state => state.contacts.filter;\nconst getError = state => state.contacts.items.error;\n\nconst getFilteredContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nconst contactsSelectors = {\n  getItems,\n  getFilter,\n  getError,\n  getFilteredContacts,\n};\n\nexport default contactsSelectors;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './ContactsList.css';\nimport { contactsSelectors, contactsOperations } from './../../redux/contacts';\nimport styled from 'styled-components';\n\nconst ContactsList = () => {\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className=\"List\">\n      {filteredContacts.map(({ name, id, number }) => (\n        <li key={id} className=\"Contact\">\n          <ContactBox className=\"Text\">\n            <p className=\"Name\">{name}</p>\n            <p className=\"Phone\">{number}</p>\n          </ContactBox>\n          <button\n            className=\"removeBtn\"\n            type=\"button\"\n            onClick={() =>\n              dispatch(contactsOperations.removeContactOperation(id))\n            }\n          >\n            Remove contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n\nconst ContactBox = styled.div``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport ContactsList from '../ContactsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, actions } from './../../redux/contacts';\n\nconst Contacts = ({ title }) => {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(actions.setUpFilter(event.currentTarget.value));\n  };\n\n  return (\n    <>\n      <h2 className=\"Title\">{title}</h2>\n      <Input\n        style={{ width: '45%' }}\n        label=\"Find contacts by name\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        handleInputChange={handleFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n      <ContactsList />\n    </>\n  );\n};\n\nContacts.defaultProps = {\n  title: '',\n};\nContacts.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Contacts;\n","import React from 'react';\nimport './AddButton.css';\n\nconst AddButton = () => (\n  <button className=\"Addbtn__style\" type=\"submit\">\n    Add contact\n  </button>\n);\n\nexport default AddButton;\n","import React, { useState } from 'react';\nimport Input from '../Input';\nimport AddButton from '../AddButton';\n\nimport './Form.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from './../../redux/contacts';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(contactsSelectors.getItems);\n  const dispatch = useDispatch();\n\n  const handleInput = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        return;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    if (items.find(contact => contact.name === name)) {\n      alert('Attempt to create existing contact!');\n      return;\n    }\n\n    dispatch(contactsOperations.addContactOperation({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={onFormSubmit}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        handleInputChange={handleInput}\n        value={name}\n      />\n      <Input\n        label=\"Phone number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        value={number}\n        handleInputChange={handleInput}\n      />\n      <AddButton />\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Section.css';\n\nconst Section = ({ title, children }) => (\n  <section className=\"Section\">\n    <h1 className=\"Title\">{title}</h1>\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import Contacts from './../components/Contacts';\r\nimport Form from './../components/Form';\r\nimport Section from './../components/Section';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { contactsOperations, contactsSelectors } from './../redux/contacts';\r\n\r\nconst ContactsPage = () => {\r\n  const items = useSelector(contactsSelectors.getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Section title=\"Phonebok\">\r\n      <Form />\r\n      {items.length > 0 && <Contacts title=\"Contacts\" />}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getAuthStatus = state => state.auth.userAuthorized;\r\nconst getUser = state => state.auth.user;\r\nconst getToken = state => state.auth.token;\r\nconst getRefreshing = state => state.auth.isRefreshing;\r\n\r\nconst getUserName = createSelector([getUser], user => {\r\n  return user.name;\r\n});\r\n\r\nconst authSelectors = {\r\n  getRefreshing,\r\n  getAuthStatus,\r\n  getUser,\r\n  getToken,\r\n  getUserName,\r\n};\r\n\r\nexport default authSelectors;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst HomePage = () => {\r\n  const isLogedIn = useSelector(authSelectors.getAuthStatus);\r\n  return (\r\n    <>\r\n      <Title>Best phonebook ever!</Title>\r\n      <Greeting>\r\n        {isLogedIn ? 'Welcome to your phonebook!' : 'Authorize now to start!'}\r\n      </Greeting>\r\n      <Description>\r\n        Here you can keep your contacts and work with them\r\n      </Description>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 200px;\r\n  margin-bottom: 0;\r\n  color: #94255d;\r\n`;\r\nconst Greeting = styled.h2`\r\n  width: 60%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #94255d;\r\n`;\r\nconst Description = styled.p`\r\n  margin-top: 20px;\r\n  margin-bottom: 0;\r\n  color: #94255d;\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({ children, ...routeProps }) {\r\n  const isLogedIn = useSelector(authSelectors.getAuthStatus);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLogedIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLogedIn = useSelector(authSelectors.getAuthStatus);\r\n  const shouldRedirect = restricted && isLogedIn;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to=\"/\" /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Register from './pages/register';\nimport Login from './pages/login';\nimport ContactsPage from './pages/contacts';\nimport HomePage from './pages/home';\nimport styled from 'styled-components';\n\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authSelectors from './redux/auth/auth-selectors';\nimport { authOperations } from './redux/auth';\nimport { contactsSelectors } from './redux/contacts';\n\nimport { error } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUserOperation());\n  }, [dispatch]);\n\n  const [showAuth, setShowAuth] = useState(false);\n  const [authButtonText, setAuthButtonText] = useState('authorization');\n  const [authActive, setAuthActive] = useState(false);\n\n  const userStatus = useSelector(authSelectors.getAuthStatus);\n  const currentUserName = useSelector(authSelectors.getUserName);\n\n  const currentError = useSelector(contactsSelectors.getError);\n  const isRefreshing = useSelector(authSelectors.getRefreshing);\n\n  useEffect(() => {\n    if (currentError) error({ text: currentError });\n  }, [currentError]);\n\n  const handleLogOut = () => {\n    dispatch(authOperations.logoutUserOperation());\n  };\n\n  return (\n    !isRefreshing && (\n      <div style={{ textAlign: 'center' }} className=\"App\">\n        <nav>\n          <Navlist>\n            <NavItem className=\"navItem\">\n              <CustomNavLink\n                onClick={() => {\n                  setAuthActive(false);\n                }}\n                exact\n                className=\"navLink\"\n                activeClassName=\"navLinkActive\"\n                to=\"/\"\n              >\n                home\n              </CustomNavLink>\n            </NavItem>\n            {userStatus && (\n              <NavItem className=\"navItem\">\n                <CustomNavLink\n                  onClick={() => {\n                    setAuthActive(false);\n                  }}\n                  className=\"navLink\"\n                  activeClassName=\"navLinkActive\"\n                  to=\"/contacts\"\n                >\n                  contacts\n                </CustomNavLink>\n              </NavItem>\n            )}\n            {!userStatus ? (\n              <NavItem\n                onClick={() => {\n                  setAuthButtonText('authorization');\n                  setShowAuth(!showAuth);\n                  setAuthActive(!authActive);\n\n                  if (\n                    window.location.href.includes('register') ||\n                    window.location.href.includes('login')\n                  ) {\n                    setAuthActive(true);\n                  }\n                }}\n                className={classNames('navItem', ' withList', {\n                  current: authActive,\n                })}\n                style={{ borderRadius: !showAuth && '20px' }}\n              >\n                {authButtonText}\n\n                {showAuth && (\n                  <AuthList>\n                    <li>\n                      <CustomNavLink\n                        className=\"navLink\"\n                        activeClassName=\"navLinkActive\"\n                        exact\n                        to=\"/register\"\n                        onClick={() => {\n                          setAuthButtonText('register');\n                        }}\n                      >\n                        register\n                      </CustomNavLink>\n                    </li>\n                    <li>\n                      <CustomNavLink\n                        onClick={() => {\n                          setAuthButtonText('login');\n                        }}\n                        className=\"navLink\"\n                        activeClassName=\"navLinkActive\"\n                        to=\"/login\"\n                      >\n                        login\n                      </CustomNavLink>\n                    </li>\n                  </AuthList>\n                )}\n              </NavItem>\n            ) : (\n              <UserMenu>\n                <Greeting>Welcome, {currentUserName}!</Greeting>\n                <Exit onClick={handleLogOut}>Log out</Exit>\n              </UserMenu>\n            )}\n          </Navlist>\n        </nav>\n        <PublicRoute path=\"/\" exact>\n          <HomePage />\n        </PublicRoute>\n        <PublicRoute path=\"/register\" exact restricted>\n          <Register />\n        </PublicRoute>\n        <PublicRoute path=\"/login\" exact restricted>\n          <Login />\n        </PublicRoute>\n        <PrivateRoute path=\"/contacts\" exact>\n          <ContactsPage />\n        </PrivateRoute>\n      </div>\n    )\n  );\n};\n\nexport default App;\n\nconst Navlist = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0;\n  margin-bottom: 20px;\n  padding: 20px;\n  list-style: none;\n`;\nconst NavItem = styled.li`\n  position: relative;\n  width: calc(100% / 3 - 40px);\n  padding: 10px 0;\n  color: #ff1493;\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: 40px;\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n  &:hover,\n  &:focus,\n  &:active,\n  &.current {\n    background-color: #8a2be2;\n    color: white;\n    border-radius: 20px;\n    &.withList {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n`;\nconst CustomNavLink = styled(NavLink)`\n  display: inline-block;\n  width: 100%;\n  color: #ff1493;\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: 40px;\n  &:hover,\n  &:focus,\n  &.navLinkActive {\n    background-color: #8a2be2;\n    color: white;\n    border-radius: 20px;\n  }\n`;\nconst AuthList = styled.ul`\n  position: absolute;\n  bottom: -140%;\n  left: 0;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  background-color: #8a2be2;\n  color: white;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  & > li {\n  }\n`;\nconst UserMenu = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  width: calc(100% / 3 - 40px);\n  padding: 20px;\n  font-size: 20px;\n  color: #ff1493;\n  border: 2px solid #ff1493;\n  border-radius: 10px;\n`;\nconst Greeting = styled.p`\n  margin: 0;\n  font-weight: bold;\n`;\nconst Exit = styled.button`\n  padding: 5px 15px;\n  width: 130px;\n  background-color: rgb(126, 50, 150);\n  color: aliceblue;\n  border: none;\n  border-radius: 5px;\n  transition: background-color 250ms ease, transform 250ms ease;\n  &:hover,\n  &:focus {\n    background-color: rgb(162, 63, 192);\n    transform: scale(1.1);\n  }\n`;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  loginUserError,\r\n  loginUserSuccess,\r\n  logoutUserError,\r\n  logoutUserSuccess,\r\n  registerUserError,\r\n  registerUserSuccess,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerUserSuccess]: (_, { payload }) => payload.user,\r\n  [loginUserSuccess]: (_, { payload }) => payload.user,\r\n  [logoutUserSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerUserSuccess]: (_, { payload }) => payload.token,\r\n  [loginUserSuccess]: (_, { payload }) => payload.token,\r\n  [logoutUserSuccess]: () => null,\r\n});\r\n\r\nconst userAuthorized = createReducer(false, {\r\n  [registerUserSuccess]: () => true,\r\n  [loginUserSuccess]: () => true,\r\n  [logoutUserSuccess]: () => false,\r\n  [getCurrentUserSuccess]: () => true,\r\n});\r\n\r\nconst isRefreshing = createReducer(false, {\r\n  [getCurrentUserRequest]: () => true,\r\n  [getCurrentUserSuccess]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\n\r\nconst setError = (_, { payload }) => {\r\n  switch (payload) {\r\n    case 400:\r\n      return 'Invalid data entered, please, change your inputs!';\r\n    case 500:\r\n      return 'Oops, something went wrong :( Please, try again!';\r\n    case 401:\r\n      return 'You shouls authorize to perform this operation!';\r\n    default:\r\n      return 'Unknown error';\r\n  }\r\n};\r\n\r\nconst error = createReducer(null, {\r\n  [registerUserError]: setError,\r\n  [loginUserError]: setError,\r\n  [logoutUserError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  userAuthorized,\r\n  isRefreshing,\r\n});\r\n\r\nexport default authReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions, {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  fetchContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  removeContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n} from './contacts-actions';\n\nconst entities = createReducer([], {\n  [fetchContactsSuccess]: (_, action) => action.payload,\n\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n\n  [removeContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [removeContactsRequest]: () => true,\n  [removeContactsSuccess]: () => false,\n  [removeContactsError]: () => false,\n});\n\nconst setError = (_, { payload }) => {\n  switch (payload) {\n    case 400:\n      return 'Oops, something went wrong :( Please, try again!';\n    case 401:\n      return 'You shouls authorize to perform this operation!';\n    case 404:\n      return 'No data found for current user';\n    case 500:\n      return 'Oops, something went wrong :( Please, try again!';\n    default:\n      return 'Unknown error';\n  }\n};\n\nconst error = createReducer('', {\n  [fetchContactsError]: setError,\n  [fetchContactsRequest]: () => '',\n\n  [addContactError]: setError,\n  [addContactRequest]: () => '',\n\n  [removeContactsError]: setError,\n  [removeContactsRequest]: () => '',\n});\n\nconst itemsReducer = combineReducers({\n  entities,\n  isLoading,\n  error,\n});\n\nconst filterReducer = createReducer('', {\n  [actions.setUpFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport authReducer from './auth/auth-reducer';\nimport contactsReducer from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { persistor, store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}